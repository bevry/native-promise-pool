{
  "name": "native-promise-pool",
  "version": "1.0.0",
  "description": "Create a pool of a specified concurrency that accepts functions that return promises",
  "homepage": "https://github.com/bevry/native-promise-pool",
  "license": "MIT",
  "keywords": [
    "async",
    "promise",
    "promises",
    "pool",
    "concurrency",
    "flow",
    "flow control"
  ],
  "badges": {
    "list": [
      "travisci",
      "npmversion",
      "npmdownloads",
      "daviddm",
      "daviddmdev",
      "---",
      "patreon",
      "flattr",
      "liberapay",
      "thanksapp",
      "boostlab",
      "buymeacoffee",
      "opencollective",
      "crypto",
      "paypal",
      "wishlist"
    ],
    "config": {
      "buymeacoffeeUsername": "balupton",
      "cryptoURL": "https://bevry.me/crypto",
      "flattrUsername": "balupton",
      "liberapayUsername": "bevry",
      "opencollectiveUsername": "bevry",
      "patreonUsername": "bevry",
      "paypalURL": "https://bevry.me/paypal",
      "wishlistURL": "https://bevry.me/wishlist"
    }
  },
  "author": "2018+ Benjamin Lupton <b@lupton.cc>",
  "maintainers": [
    "Benjamin Lupton <b@lupton.cc>"
  ],
  "contributors": [
    "Benjamin Lupton (http://balupton.com)"
  ],
  "bugs": {
    "url": "https://github.com/bevry/native-promise-pool/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/bevry/native-promise-pool.git"
  },
  "engines": {
    "node": ">=6"
  },
  "editions": [
    {
      "description": "esnext source code with require for modules",
      "directory": "source",
      "entry": "index.js",
      "syntaxes": [
        "javascript",
        "esnext",
        "require"
      ],
      "engines": {
        "node": ">=6",
        "browsers": false
      }
    },
    {
      "description": "esnext compiled for browsers with require for modules",
      "directory": "edition-browsers",
      "entry": "index.js",
      "syntaxes": [
        "javascript",
        "require"
      ],
      "engines": {
        "node": false,
        "browsers": "defaults"
      }
    }
  ],
  "main": "index.js",
  "browser": "edition-browsers/index.js",
  "dependencies": {
    "editions": "^2.0.2"
  },
  "devDependencies": {
    "@babel/cli": "^7.1.5",
    "@babel/core": "^7.1.6",
    "@babel/preset-env": "^7.1.6",
    "assert-helpers": "^4.5.1",
    "bluebird": "^3.5.3",
    "chalk": "^2.4.1",
    "eslint": "^5.9.0",
    "joe": "^2.0.2",
    "joe-reporter-console": "^2.0.2",
    "jsdoc": "^3.5.5",
    "logger-clearable": "^1.0.0",
    "minami": "^1.2.3",
    "projectz": "^1.4.0",
    "surge": "^0.20.1",
    "valid-directory": "^1.0.0"
  },
  "scripts": {
    "our:clean": "rm -Rf ./docs ./edition* ./es2015 ./es5 ./out",
    "our:compile": "npm run our:compile:edition-browsers",
    "our:compile:edition-browsers": "env BABEL_ENV=edition-browsers babel --out-dir ./edition-browsers ./source",
    "our:deploy": "echo no need for this project",
    "our:meta": "npm run our:meta:docs && npm run our:meta:projectz",
    "our:meta:docs": "rm -Rf ./docs && jsdoc --recurse --pedantic --access all --destination ./docs --package ./package.json --readme ./README.md --template ./node_modules/minami ./source && mv ./docs/$npm_package_name/$npm_package_version/* ./docs/ && rm -Rf ./docs/$npm_package_name/$npm_package_version",
    "our:meta:projectz": "projectz compile",
    "our:release": "npm run our:release:prepare && npm run our:release:check-changelog && npm run our:release:check-dirty && npm run our:release:tag && npm run our:release:push",
    "our:release:check-changelog": "cat ./HISTORY.md | grep v$npm_package_version || (echo add a changelog entry for v$npm_package_version && exit -1)",
    "our:release:check-dirty": "git diff --exit-code",
    "our:release:prepare": "npm run our:clean && npm run our:compile && npm run our:test && npm run our:meta",
    "our:release:push": "git push origin master && git push origin --tags",
    "our:release:tag": "export MESSAGE=$(cat ./HISTORY.md | sed -n \"/## v$npm_package_version/,/##/p\" | sed 's/## //' | awk 'NR>1{print buf}{buf = $0}') && test \"$MESSAGE\" || (echo 'proper changelog entry not found' && exit -1) && git tag v$npm_package_version -am \"$MESSAGE\"",
    "our:setup": "npm run our:setup:npm",
    "our:setup:npm": "npm install",
    "our:test": "npm run our:verify && npm test",
    "our:verify": "npm run our:verify:directory && npm run our:verify:eslint",
    "our:verify:directory": "npx valid-directory",
    "our:verify:eslint": "eslint --fix ./source",
    "test": "node --harmony ./test.js --joe-reporter=console"
  },
  "babel": {
    "env": {
      "edition-browsers": {
        "presets": [
          [
            "@babel/preset-env",
            {
              "targets": {
                "browsers": "defaults"
              }
            }
          ]
        ]
      }
    }
  }
}
